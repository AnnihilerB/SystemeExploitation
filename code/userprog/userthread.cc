#ifdef CHANGED

#include <stdio.h>
#include "utility.h"
#include "system.h"



static void StartUserThread(void *arg){
    //Récupération des arguments
    DEBUG('c', "Récupération des arguments...\n");
    int *arguments = (int*)arg;
    int fonction = arguments[0];
    int parametre = arguments[1];
    DEBUG('c', "Adresse de la fonction 0x%x\n", fonction);

    DEBUG('c', "Initialisation des registres à 0...\n");
    //Initialisation des registres

    machine->WriteRegister(4, fonction);
    machine->WriteRegister(5, parametre);

    machine->WriteRegister (PCReg, machine->ReadRegister(4));
    machine->WriteRegister (NextPCReg, machine->ReadRegister(4));

    DEBUG('c', "Allocation du pointeur de pile...\n");
    currentThread->space->AllocateUserStack();
    DEBUG('c', "Pointeur de pile alloué !\n");
    DEBUG('c', "Lancement de l'interpreteur...\n");
    machine->Run();
    DEBUG('c', "Retour de l'interpreteur.\n");
}

int do_ThreadCreate(int f, int arg){
    DEBUG('c', "Début de do_ThreadCreate\n");

    //Tableau servant à stocker les paramètres. Son adresse sera envoyée au thread.
    int arguments[2];
    arguments[0] = f;
    arguments[1] = arg;

    DEBUG('c', "Création du thread\n");
    Thread *newThread = new Thread("new Thread");
    DEBUG('c', "Mise en liste d'attente\n");
    newThread->Start(StartUserThread, &arguments);
    DEBUG('c', "Fin de do_ThreadCreate\n\n");
    return 1;
}



int do_ThreadExit(){
    return -1;
}

#endif